# Generated by Django 5.0.1 on 2024-06-08 03:52

import apps.utils.paths
import apps.utils.validators
import django.core.validators
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('genres', '0001_initial'),
        ('persons', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Magazine',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_available', models.BooleanField(db_index=True, default=True, verbose_name='is available')),
                ('created_at', models.DateField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateField(auto_now=True, verbose_name='updated at')),
                ('slug', models.SlugField(blank=True, null=True, unique=True, verbose_name='Slug')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('count', models.PositiveIntegerField(default=0, verbose_name='count')),
            ],
            options={
                'verbose_name': 'magazine',
                'verbose_name_plural': 'magazines',
                'ordering': ['pk'],
            },
        ),
        migrations.CreateModel(
            name='Manga',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_available', models.BooleanField(db_index=True, default=True, verbose_name='is available')),
                ('created_at', models.DateField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateField(auto_now=True, verbose_name='updated at')),
                ('slug', models.SlugField(blank=True, null=True, unique=True, verbose_name='Slug')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name (eng)')),
                ('name_jpn', models.CharField(max_length=255, unique=True, verbose_name='name (jpn)')),
                ('name_rom', models.CharField(blank=True, max_length=255, unique=True, verbose_name='name (rmj)')),
                ('alternative_names', models.JSONField(blank=True, default=list, null=True, verbose_name='alternative names')),
                ('image', models.ImageField(blank=True, null=True, upload_to=apps.utils.paths.picture_image_path, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpg', 'webp']), apps.utils.validators.ImageSizeValidator(max_height=1280, max_width=909), apps.utils.validators.FileSizeValidator(limit_mb=2)], verbose_name='image')),
                ('synopsis', models.TextField(blank=True, null=True, verbose_name='synopsis')),
                ('background', models.TextField(blank=True, null=True, verbose_name='background')),
                ('media_type', models.CharField(choices=[('manga', 'Manga'), ('novel', 'Novel'), ('oneshot', 'One Shot'), ('doujinshi', 'Doujinshi'), ('manhwa', 'Manhwa'), ('oel', 'OEL')], default='manga', max_length=10, verbose_name='media type')),
                ('chapters', models.PositiveIntegerField(default=1, verbose_name='chapters')),
                ('volumes', models.PositiveIntegerField(default=1, verbose_name='volumes')),
                ('status', models.CharField(choices=[('finished', 'Finished'), ('airing', 'Airing'), ('upcoming', 'Upcoming')], default='airing', max_length=10, verbose_name='status')),
                ('published_from', models.DateField(verbose_name='published from')),
                ('published_to', models.DateField(blank=True, null=True, verbose_name='published to')),
                ('website', models.URLField(blank=True, max_length=255, verbose_name='website')),
                ('is_recommended', models.BooleanField(default=False, verbose_name='is recommended')),
                ('score', models.FloatField(blank=True, null=True, verbose_name='score')),
                ('ranked', models.PositiveIntegerField(default=0, verbose_name='ranked')),
                ('popularity', models.PositiveIntegerField(default=0, verbose_name='popularity')),
                ('members', models.PositiveIntegerField(default=0, verbose_name='members')),
                ('favorites', models.PositiveIntegerField(default=0, verbose_name='favorites')),
                ('author_id', models.ForeignKey(limit_choices_to={'category': 'artist', 'is_available': True}, on_delete=django.db.models.deletion.CASCADE, to='persons.person', verbose_name='author')),
                ('demographic_id', models.ForeignKey(blank=True, limit_choices_to={'is_available': True}, null=True, on_delete=django.db.models.deletion.CASCADE, to='genres.demographic', verbose_name='demographic')),
                ('genres', models.ManyToManyField(to='genres.genre', verbose_name='genres')),
                ('serialization_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='mangas.magazine', verbose_name='serialization')),
                ('themes', models.ManyToManyField(to='genres.theme', verbose_name='themes')),
            ],
            options={
                'verbose_name': 'manga',
                'verbose_name_plural': 'mangas',
                'ordering': ['pk'],
            },
        ),
        migrations.CreateModel(
            name='MangaStats',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_available', models.BooleanField(db_index=True, default=True, verbose_name='is available')),
                ('created_at', models.DateField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateField(auto_now=True, verbose_name='updated at')),
                ('reading', models.PositiveIntegerField(default=0)),
                ('completed', models.PositiveIntegerField(default=0)),
                ('on_hold', models.PositiveIntegerField(default=0)),
                ('dropped', models.PositiveIntegerField(default=0)),
                ('plan_to_read', models.PositiveIntegerField(default=0)),
                ('total', models.PositiveIntegerField(default=0)),
                ('manga_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='stats', to='mangas.manga')),
            ],
            options={
                'verbose_name': 'manga stats',
                'verbose_name_plural': 'manga stats',
                'ordering': ['pk'],
            },
        ),
    ]
