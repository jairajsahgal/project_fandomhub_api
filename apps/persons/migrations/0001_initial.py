# Generated by Django 5.0.1 on 2024-06-08 03:52

import apps.utils.paths
import apps.utils.validators
import django.core.validators
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('animes', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_available', models.BooleanField(db_index=True, default=True, verbose_name='is available')),
                ('created_at', models.DateField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateField(auto_now=True, verbose_name='updated at')),
                ('slug', models.SlugField(blank=True, null=True, unique=True, verbose_name='Slug')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='name')),
                ('given_name', models.CharField(blank=True, help_text='first_name', max_length=255, verbose_name='given name')),
                ('family_name', models.CharField(blank=True, help_text='last_name', max_length=255, verbose_name='family name')),
                ('image', models.ImageField(blank=True, null=True, upload_to=apps.utils.paths.image_path, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpg', 'webp']), apps.utils.validators.ImageSizeValidator(max_height=1080, max_width=1080), apps.utils.validators.FileSizeValidator(limit_mb=1)], verbose_name='image')),
                ('alternate_names', models.JSONField(blank=True, default=list, null=True, verbose_name='alternative names')),
                ('birthday', models.DateField(blank=True, null=True, verbose_name='birthday')),
                ('about', models.TextField(blank=True, null=True, verbose_name='about')),
                ('website', models.URLField(blank=True, null=True, verbose_name='website')),
                ('language', models.CharField(choices=[('japanese', 'Japanese'), ('english', 'English'), ('spanish', 'Spanish'), ('french', 'French'), ('german', 'German'), ('italian', 'Italian'), ('portuguese', 'Portuguese')], default='japanese', max_length=20, verbose_name='language')),
                ('category', models.CharField(choices=[('director', 'Director'), ('voice_actor', 'Voice Actor'), ('artist', 'Artist'), ('writer', 'Writer'), ('producer', 'Producer'), ('other', 'Other')], db_index=True, max_length=20, verbose_name='category')),
                ('favorites', models.PositiveIntegerField(default=0, verbose_name='favorites')),
            ],
            options={
                'verbose_name': 'person',
                'verbose_name_plural': 'persons',
                'ordering': ['pk'],
            },
        ),
        migrations.CreateModel(
            name='StaffAnime',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_available', models.BooleanField(db_index=True, default=True, verbose_name='is available')),
                ('created_at', models.DateField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateField(auto_now=True, verbose_name='updated at')),
                ('anime_id', models.ForeignKey(limit_choices_to={'is_available': True}, on_delete=django.db.models.deletion.CASCADE, related_name='person_anime', to='animes.anime')),
                ('person_id', models.ForeignKey(limit_choices_to={'is_available': True}, on_delete=django.db.models.deletion.CASCADE, related_name='person_anime', to='persons.person')),
            ],
            options={
                'verbose_name': 'staff anime',
                'verbose_name_plural': 'staff animes',
                'ordering': ['pk'],
            },
        ),
        migrations.AddConstraint(
            model_name='staffanime',
            constraint=models.UniqueConstraint(fields=('person_id', 'anime_id'), name='unique_staff_anime'),
        ),
    ]
