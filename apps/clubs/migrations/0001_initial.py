# Generated by Django 5.0.1 on 2024-06-08 03:52

import apps.utils.paths
import apps.utils.validators
import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Club',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_available', models.BooleanField(db_index=True, default=True, verbose_name='is available')),
                ('created_at', models.DateField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateField(auto_now=True, verbose_name='updated at')),
                ('slug', models.SlugField(blank=True, null=True, unique=True, verbose_name='Slug')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('description', models.TextField(verbose_name='description')),
                ('image', models.ImageField(blank=True, null=True, upload_to=apps.utils.paths.image_path, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['jpg', 'png', 'webp']), apps.utils.validators.ImageSizeValidator(max_height=600, max_width=600), apps.utils.validators.FileSizeValidator(limit_mb=1)], verbose_name='image')),
                ('category', models.CharField(choices=[('anime', 'Anime'), ('manga', 'Manga'), ('actors_and_artists', 'Actors and Artists'), ('characters', 'Characters'), ('cities_and_neighborhoods', 'Cities and Neighborhoods'), ('companies', 'Companies'), ('conventions', 'Conventions'), ('games', 'Games'), ('japan', 'Japan'), ('music', 'Music'), ('schools', 'Schools'), ('other', 'Other')], max_length=30, verbose_name='category')),
                ('members', models.PositiveIntegerField(default=0, verbose_name='members')),
                ('is_public', models.BooleanField(verbose_name='is public')),
                ('created_by', models.OneToOneField(limit_choices_to={'is_available': True}, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='creator')),
            ],
            options={
                'verbose_name': 'club',
                'verbose_name_plural': 'clubs',
                'ordering': ['pk'],
            },
        ),
        migrations.CreateModel(
            name='ClubMember',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_available', models.BooleanField(db_index=True, default=True, verbose_name='is available')),
                ('created_at', models.DateField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateField(auto_now=True, verbose_name='updated at')),
                ('joined_at', models.DateTimeField(auto_now_add=True, verbose_name='joined_at')),
                ('club_id', models.ForeignKey(limit_choices_to={'is_available': True}, on_delete=django.db.models.deletion.CASCADE, to='clubs.club', verbose_name='club')),
                ('user_id', models.ForeignKey(limit_choices_to={'is_available': True}, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'verbose_name': 'club member',
                'verbose_name_plural': 'club members',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_available', models.BooleanField(db_index=True, default=True, verbose_name='is available')),
                ('created_at', models.DateField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateField(auto_now=True, verbose_name='updated at')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('description', models.TextField(verbose_name='description')),
                ('date', models.DateTimeField(verbose_name='date')),
                ('club_id', models.ForeignKey(limit_choices_to={'is_available': True}, on_delete=django.db.models.deletion.CASCADE, to='clubs.club', verbose_name='club')),
            ],
            options={
                'verbose_name': 'event',
                'verbose_name_plural': 'events',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_available', models.BooleanField(db_index=True, default=True, verbose_name='is available')),
                ('created_at', models.DateField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateField(auto_now=True, verbose_name='updated at')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('club_id', models.ForeignKey(limit_choices_to={'is_available': True}, on_delete=django.db.models.deletion.CASCADE, to='clubs.club', verbose_name='topic')),
                ('created_by', models.ForeignKey(limit_choices_to={'is_available': True}, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='created by')),
            ],
            options={
                'verbose_name': 'topic',
                'verbose_name_plural': 'topics',
                'ordering': ['pk'],
            },
        ),
        migrations.CreateModel(
            name='Discussion',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_available', models.BooleanField(db_index=True, default=True, verbose_name='is available')),
                ('created_at', models.DateField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateField(auto_now=True, verbose_name='updated at')),
                ('content', models.TextField(verbose_name='content')),
                ('created_by', models.ForeignKey(limit_choices_to={'is_available': True}, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='created by')),
                ('topic_id', models.ForeignKey(limit_choices_to={'is_available': True}, on_delete=django.db.models.deletion.CASCADE, to='clubs.topic', verbose_name='topic')),
            ],
            options={
                'verbose_name': 'discussion',
                'verbose_name_plural': 'discussions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddConstraint(
            model_name='clubmember',
            constraint=models.UniqueConstraint(fields=('club_id', 'user_id'), name='unique_club_user'),
        ),
    ]
